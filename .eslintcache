[{"/Users/xxvxxr/Documents/GitHub/dentaldash/src/index.js":"1","/Users/xxvxxr/Documents/GitHub/dentaldash/src/App.js":"2","/Users/xxvxxr/Documents/GitHub/dentaldash/src/SimpleCard.js":"3","/Users/xxvxxr/Documents/GitHub/dentaldash/src/Header.js":"4","/Users/xxvxxr/Documents/GitHub/dentaldash/src/CardContent.js":"5","/Users/xxvxxr/Documents/GitHub/dentaldash/src/Drawer.js":"6","/Users/xxvxxr/Documents/GitHub/dentaldash/src/Chart.js":"7","/Users/xxvxxr/Documents/GitHub/dentaldash/src/GoalSelector.js":"8","/Users/xxvxxr/Documents/GitHub/dentaldash/src/ProgressBar.js":"9"},{"size":407,"mtime":1630250057411,"results":"10","hashOfConfig":"11"},{"size":945,"mtime":1630250670058,"results":"12","hashOfConfig":"11"},{"size":6343,"mtime":1630608662962,"results":"13","hashOfConfig":"11"},{"size":1704,"mtime":1630507855305,"results":"14","hashOfConfig":"11"},{"size":1543,"mtime":1630038714629,"results":"15","hashOfConfig":"11"},{"size":1852,"mtime":1630440359375,"results":"16","hashOfConfig":"11"},{"size":3524,"mtime":1630599150539,"results":"17","hashOfConfig":"11"},{"size":1225,"mtime":1630602192444,"results":"18","hashOfConfig":"11"},{"size":1814,"mtime":1630608021535,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1l9tf8m",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xxvxxr/Documents/GitHub/dentaldash/src/index.js",[],["41","42"],"/Users/xxvxxr/Documents/GitHub/dentaldash/src/App.js",[],"/Users/xxvxxr/Documents/GitHub/dentaldash/src/SimpleCard.js",[],"/Users/xxvxxr/Documents/GitHub/dentaldash/src/Header.js",["43"],"import React, { useState } from 'react'\nimport { AppBar, makeStyles, IconButton, Toolbar} from '@material-ui/core' //  look into using by wrappeing the themeProvider in: responsiveFontSizes\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded'\nimport DirectionsRunRoundedIcon from '@material-ui/icons/DirectionsRunRounded'\nimport DrawerOpener from './Drawer'\nimport { Drawer } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme)=> ((\n    console.log(theme),\n    {\n    \n    appBar:{\n        background: 'rgba(255, 255, 255, .5)'\n    },\n    title:{\n        color: 'rgba(23, 84, 236, 1)',\n        flexGrow: '1', \n        fontFamily: 'DM sans', \n        fontSize: '3.1875rem'\n        \n    },\n    icon:{\n        color: 'rgba(23, 84, 236, 1)',\n        fontSize: '3rem'\n    },\n\n})))\n\n\nexport default function Header () {\n    const classes = useStyles()\n    const [open, setOpen] = useState(false)\n\n    const toggleDrawer = (open) => () => (\n        setOpen(open)\n    )\n    return (\n        <div>\n            <AppBar className={classes.appBar} elevation={0} >\n                <Toolbar>\n                    <DirectionsRunRoundedIcon fontSize='large' style={{color: 'rgba(23, 84, 236, 1'}}/>\n                    <h1 className={classes.title}>Dental Dash</h1>\n                    <IconButton onClick={toggleDrawer(true)}>\n                    {/* open={DrawerOpener} */}\n                        <MenuRoundedIcon className={classes.icon}/>\n                    </IconButton>\n                        <Drawer anchor={'right'} open={open} onclose={toggleDrawer(false)}><p onClick={toggleDrawer(false)}>this is it </p></Drawer>\n                </Toolbar>\n            </AppBar>\n    \n        </div>\n    )\n}","/Users/xxvxxr/Documents/GitHub/dentaldash/src/CardContent.js",[],"/Users/xxvxxr/Documents/GitHub/dentaldash/src/Drawer.js",["44"],"import { Drawer, makeStyles, useTheme } from \"@material-ui/core\"\nimport InboxIcon from '@material-ui/icons/Inbox'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Divider } from '@material-ui/core'\nimport { List } from '@material-ui/core'\nimport { ListItem } from '@material-ui/core'\nimport { ListItemIcon } from '@material-ui/core'\nimport { ListItemText } from '@material-ui/core'\nimport { IconButton } from \"@material-ui/core\";\nimport { useState } from \"react\"\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\n\n\nconst useStyles = makeStyles((theme)=> (({\n\n})))\n\n\n\nexport default function DrawerOpener () {\nconst classes = useStyles()\nconst theme = useTheme()\nconst [open, setOpen] = useState(false);\n\n\nconst handleDrawerOpen = () => setOpen(true);\n\nconst handleDrawerClose = () => setOpen(false);\n\n\n\n<Drawer\n    className={classes.drawer}\n    variant=\"persistent\"\n    anchor=\"right\"\n    open={open}\n    classes={{\n    paper: classes.drawerPaper,\n    }}\n    >\n    <div className={classes.drawerHeader}>\n    <IconButton onClick={handleDrawerClose}>\n        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n    </IconButton>\n    </div>\n    <Divider />\n    <List>\n    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n        <ListItem button key={text}>\n        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n        <ListItemText primary={text} />\n        </ListItem>\n    ))}\n    </List>\n    <Divider />\n    <List>\n    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n        <ListItem button key={text}>\n        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n        <ListItemText primary={text} />\n        </ListItem>\n    ))}\n    </List>\n    </Drawer> \n\n}\n\n","/Users/xxvxxr/Documents/GitHub/dentaldash/src/Chart.js",[],"/Users/xxvxxr/Documents/GitHub/dentaldash/src/GoalSelector.js",[],"/Users/xxvxxr/Documents/GitHub/dentaldash/src/ProgressBar.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":20},{"ruleId":"49","severity":1,"message":"53","line":27,"column":7,"nodeType":"51","messageId":"52","endLine":27,"endColumn":23},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'DrawerOpener' is defined but never used.","Identifier","unusedVar","'handleDrawerOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]